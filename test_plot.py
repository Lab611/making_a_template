import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


# 原坐标系下：

# # 平面方程的系数 (A, B, C, D)
# planes = [
#     {'A': 19.287, 'B': 147.668, 'C': -91.909, 'D': 1035.264164729282}, #   19.287 147.668 -91.909 1035.264164729282
#     {'A': 71.88038478388974, 'B': 8.59015939583292, 'C': 28.88562207173113, 'D': 1035.264164729282}, #  71.88038478388974 8.59015939583292 28.88562207173113 1035.264164729282
#     {'A': 0.5054995000000001, 'B': -0.7163571278000002 , 'C': -1.0448754256000001, 'D': -93.01602442734303}  #  0.5054995000000001 -0.7163571278000002 -1.0448754256000001 -93.01602442734303
# ]

# 平面方程的系数 (A, B, C, D)
planes = [
    {'A': 19.287, 'B': 147.668, 'C': -91.909, 'D': 14205.899076}, #   19.287 147.668 -91.909 14205.899076
    {'A': 71.88038478388974, 'B': 8.59015939583292, 'C': 28.88562207173113, 'D': 1035.264164729282}, #  71.88038478388974 8.59015939583292 28.88562207173113 1035.264164729282
    {'A': 0.5054995000000001, 'B': -0.7163571278000002 , 'C': -1.0448754256000001, 'D': -93.01602442734303},  #  0.5054995000000001 -0.7163571278000002 -1.0448754256000001 -93.01602442734303
    {'A': 19.287, 'B': 147.668, 'C': -91.909, 'D': 4580.891722}  #P2 P2h
]


# 转换前点的坐标 (x, y, z) 及颜色
# points = {
#     'P0': ((4.077, -105.777,  -14.529), 'blue'),        # 蓝色
#     'P1': ((23.364, 41.891,    -106.438), 'green'),       # 绿色
#     'P2': ((82.019, -50.777, -14.529), 'red'),         # 红色
#     'P3': ((-44.388, 4.721, -113.733), 'cyan'),     # 青色
#     'P2h': ((10.13861522, -59.3671594,  -43.41462207), 'magenta'),  # 品红色
#     'Poi': ((0,0,0), 'purple')  # 紫色
#     # 'P2h1': ((71.88038478,  8.5901594,  28.88562207), 'black'),  # 黑色
#     # 'O': ((0, 0, 0), 'yellow')  # 黑色
# }

#
# # 转换后点的坐标 (x, y, z) 及颜色
# points = {
#     'P0': ((0, 0,  0), 'blue'),        # 蓝色
#     'P1': ((1.75000260e+02, 0,  0), 'green'),       # 绿色
#     'P2': (( 5.49999604e+01,  7.79420279e+01,  0.00000000e+00), 'red'),         # 红色
#     'P3': (( 1.39999876e+02 ,-6.92829891e+01,  5.56123917e-04), 'cyan'),     # 青色
#     'Poi': ((81.17655785445984, 13.282933606320098, -68.19413683200288), 'purple')  # 紫色
#     # 'P2h1': ((71.88038478,  8.5901594,  28.88562207), 'black'),  # 黑色
#     # 'O': ((0, 0, 0), 'yellow')  # 黑色
# }



# 转换后点的坐标 (x, y, z) 及颜色
# points = {
#     'P0': ((56.382, -20.521, -11.), 'blue'),        # 蓝色
#     'P1': ((  -51.683 , 18.811, -11.0), 'green'),       # 绿色
#     'P2': ((    0. ,    50. ,   -11. ), 'red'),         # 红色
#     'P3': ((   0.  ,  -30. ,   -11. ), 'cyan'),     # 青色
#     'Poi': ((    0.0, -148.0, 0.0), 'purple')  # 紫色
#     # 'P2h1': ((71.88038478,  8.5901594,  28.88562207), 'black'),  # 黑色
#     # 'O': ((0, 0, 0), 'yellow')  # 黑色
# }



# # 转换后点的坐标 (x, y, z) 及颜色
points = {
    'P0': ((0, 0,  0), 'blue'),        # 蓝色
    'P1': ((                    115.00021934326908,
                    0.0,
                    0.0), 'green'),       # 绿色
    'P2': ((                    77.10118165543275,
                    46.98456291523803,
                    0.0), 'red'),         # 红色
    'P3': ((                    49.73984253826377,
                    -28.190945873963248,
                    0.0), 'cyan'),     # 青色
    'Poi': ((                    9.381867340439541,
                    -139.07482133803515,
                    -11.0), 'purple'),  # 紫色
    'Poi2': ((                    12.802034730085667,
                    -129.67788273938498,
                    -11.0), 'black')  # 黑色
    # 'P2h1': ((71.88038478,  8.5901594,  28.88562207), 'black'),  # 黑色
    # 'O': ((0, 0, 0), 'yellow')  # 黑色
}



# 创建一个3D图形对象
fig = plt.figure(figsize=(10, 10))# 可以调整图形大小
ax = fig.add_subplot(111, projection='3d')

# 绘制平面
x, y = np.meshgrid(np.linspace(-100, 100, 60), np.linspace(-100, 100, 60))
for plane in planes:
    A, B, C, D = plane['A'], plane['B'], plane['C'], plane['D']
    z = (-A * x - B * y - D) / C
    ax.plot_surface(x, y, z, alpha=0.5)

# 绘制点
for name, (coord, color) in points.items():
    ax.scatter(coord[0], coord[1], coord[2], color=color, s=100, label=name)

# 设置图形的标签、图例和背景颜色
ax.set_xlabel('X 轴')
ax.set_ylabel('Y 轴')
ax.set_zlabel('Z 轴')
ax.legend()
# 锁定XYZ网格比例
ax.set_box_aspect([1, 1, 1])  # 确保X、Y、Z轴的单位长度在图中相同
# 设置XYZ轴显示的范围
ax.set_xlim(-150, 150)  # 设置X轴的显示范围
ax.set_ylim(-150, 150)  # 设置Y轴的显示范围
ax.set_zlim(-150, 150)  # 设置Z轴的显示范围
ax.set_facecolor('w')

# 显示图形
plt.show()